diff --git a/aiida_yambo_wannier90/workflows/__init__.py b/aiida_yambo_wannier90/workflows/__init__.py
index 6d9ae1f..879866c 100644
--- a/aiida_yambo_wannier90/workflows/__init__.py
+++ b/aiida_yambo_wannier90/workflows/__init__.py
@@ -13,6 +13,7 @@ from aiida.engine import ExitCode, ProcessBuilder, ToContext, WorkChain, if_
 from aiida_quantumespresso.calculations.functions.seekpath_structure_analysis import (
     seekpath_structure_analysis,
 )
+from aiida_quantumespresso.common.types import ElectronicType, SpinType
 from aiida_quantumespresso.utils.mapping import prepare_process_inputs
 from aiida_quantumespresso.workflows.protocols.utils import ProtocolMixin
 
@@ -414,6 +415,7 @@ class YamboWannier90WorkChain(
         overrides: dict = None,
         pseudo_family: str = "PseudoDojo/0.4/PBE/SR/standard/upf",
         exclude_semicore: bool = False,
+        electronic_type=ElectronicType.METAL,
         NLCC: bool = True,
         RIM_v: bool = True,
         RIM_W: bool = False,
@@ -472,6 +474,7 @@ class YamboWannier90WorkChain(
             code=codes["yambo"],
             protocol="moderate",
             structure=structure,
+            electronic_type=electronic_type,
             overrides=yambo_overrides,
             NLCC=NLCC,
             RIM_v=RIM_v,
@@ -511,7 +514,7 @@ class YamboWannier90WorkChain(
         #     RIM_W=RIM_W,
         # )
         # inputs["yambo_qp"] = yambo_qp_builder._inputs(prune=True)
-        inputs["yambo_qp"] = inputs["yambo"]["ywfl"]["yres"]
+        inputs["yambo_qp"] = inputs["yambo"]["ywfl"]
         inputs["yambo_qp"].pop("clean_workdir", None)
 
         # Ypp; without a parent_folder for now. We should set it during the input preparation
@@ -541,6 +544,7 @@ class YamboWannier90WorkChain(
                     "exclude_semicore": exclude_semicore,
                 }
             },
+            electronic_type=electronic_type,
         )
         params = wannier90_qp_builder.wannier90.parameters.get_dict()
         params["bands_plot"] = True
@@ -779,6 +783,8 @@ class YamboWannier90WorkChain(
 
         inputs = AttributeDict(self.exposed_inputs(YamboWorkflow, namespace="yambo_qp"))
 
+        inputs.scf.pw.structure = self.ctx.current_structure
+        inputs.nscf.pw.structure = self.ctx.current_structure
         inputs.yres.yambo.parameters = input_parameters.yres.yambo.parameters
 
         # Use commensurate mesh
@@ -822,6 +828,8 @@ class YamboWannier90WorkChain(
         """Prepare inputs for yambo QP."""
         # Get the converged input from YamboWorkflow
         inputs = AttributeDict(self.exposed_inputs(YamboWorkflow, namespace="yambo_qp"))
+        yambo_params = inputs.yres.yambo.parameters.get_dict()
+
 
         # Prepare QPkrange
         if self.should_run_wannier90():
@@ -837,11 +845,14 @@ class YamboWannier90WorkChain(
 
         if self.should_run_yambo_commensurate():
             parent_wkchain = self.ctx.wkchain_yambo_commensurate
+            yambo_params = parent_wkchain.inputs.yres.yambo.parameters.get_dict()
+
         else:
             if self.should_run_yambo_convergence():
                 parent_wkchain = get_yambo_converged_workchain(
                     self.ctx.wkchain_yambo_conv
                 )
+                yambo_params = parent_wkchain.inputs.yres.yambo.parameters.get_dict()
             else:
                 # Assume the inputs.parent_folder is generated inside a YamboWorkflow
                 parent_folder = inputs.parent_folder
@@ -871,10 +882,12 @@ class YamboWannier90WorkChain(
         qpkrange = qpkrange.get_list()
 
         # Set QPkrange in GW parameters
-        yambo_params = inputs.yres.yambo.parameters.get_dict()
         yambo_params["variables"]["QPkrange"] = [qpkrange, ""]
 
-        inputs.yambo.parameters = orm.Dict(dict=yambo_params)
+        inputs.scf.pw.structure = self.ctx.current_structure
+        inputs.nscf.pw.structure = self.ctx.current_structure
+
+        inputs.yres.yambo.parameters = orm.Dict(dict=yambo_params)
 
         inputs.parent_folder = parent_wkchain.outputs.remote_folder
 
